portals give us the ability to break out of dom

problem - Error: ENOSPC: System limit for number of file watchers reached
solution - echo fs.inotify.max_user_watches=524288
            sudo tee -a /etc/sysctl.conf && sudo sysctl -p

Error boundaries are react components that catch java script error in their child component
tree, log those errors & display a fall-back ui.
    A class component ll become an error boundary by defining either or both of
    getDerivedStateFromError & componentDidCatch Lifecycle methods.

Higher Order Components (HOC) - A pattern where a fn takes component as an argument & returns
    new component.

Render props - the term render props refers to a technique for sharing code react components
    using a prop whose value is a function

Context - context provides a way to pass data through the component tree without having to pass
    props down manually at every level
    create & export (producer & consumer)

CORS - cross origins resource sharing 

redirect is used to surf between components 

uri - location & name
urn - name
url - location  (url is widely used, since address ll be unique)

Query strings are way of passing information to the server (consider a typical example of 
    fetching the eAddress from eid, if we pass the info in header its a query String)

fragments are a way of requesting portion of a page, we can identify them by # and are located
    at the end of of url's

A typical URI/L consists of  
[http/s/fttp/...protocols+domain/ip address{/port}/path/Query Strings/{fragments}]

react component route path uses regex to match the req & path hence we need to specify exact so
    even if one or more components follow the same path, only required component is loaded
    --i can use 'strict'(compo route - '/about/' - if i dont use strict if user queries for even 
    --'/about' the compo ll be loaded but if i use strict the exact url should be specified like
    --this '/about/)

Styling react - i can use these to style my react (inline styles, Radium, Styled Components,
                BEM, css modules)

Authentication (verifying identity) - 401 Unauthorized
Authorization (verifying permisiions) - 403 forbidden

csrf - Cross side request forgery




