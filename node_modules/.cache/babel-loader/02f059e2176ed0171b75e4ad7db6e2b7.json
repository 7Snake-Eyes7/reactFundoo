{"ast":null,"code":"import axios from \"axios\";\nvar headers = {\n  \"Content-Type\": \"application/json\",\n  token: localStorage.getItem(\"token\")\n};\nexport function Usercontroller(userRegister) {\n  var baseUrl = process.env.REACT_APP_BASE_URL;\n  var header = {\n    \"Content-Type\": \"application/json\"\n  };\n  return axios.post(\"http://localhost:9020/\" + \"user/registration\", userRegister, {\n    header: header\n  });\n}\nexport function userLogin(userLogin) {\n  var baseUrl = process.env.BASE_URL;\n  var header = {\n    \"Content-Type\": \"application/json\"\n  };\n  return axios.post(\"http://localhost:9020/\" + \"user/login\", userLogin, {\n    header: header\n  });\n}\nexport function emailVerify(userEmailVerify) {\n  var baseUrl = process.env.BASE_URL;\n  var header = {\n    \"Content-Type\": \"application/json\"\n  };\n  return axios.post(\"http://localhost:9020/\" + \"user/forgotpassword\", userEmailVerify, {\n    header: header\n  });\n}\nexport function userPasswordReset(userPassword, userToken) {\n  var baseUrl = process.env.BASE_URL;\n  var token = userToken;\n  console.log(token);\n  var header = {\n    \"Content-Type\": \"application/json\"\n  };\n  return axios.put(\"http://localhost:9020/user/resetpassword/\" + token, userPassword, {\n    header: header\n  });\n}\nexport function userVerify(userToken) {\n  var baseUrl = process.env.BASE_URL;\n  var token = userToken;\n  console.log(token);\n  var header = {\n    \"Content-Type\": \"application/json\"\n  };\n  return axios.get(\"http://localhost:9020/user/verify/\" + token, null, {\n    header: header\n  });\n}\nexport function getLoggedUser() {\n  return axios.get(\"http://localhost:9020/user/loggedinuser\", {\n    headers: headers\n  });\n}\nexport function uploadPic(formdata) {\n  console.log(\"in userController\", formdata.get(\"pic\"));\n  return axios.post(\"http://localhost:9020/\", formdata);\n}","map":{"version":3,"sources":["/home/admin1/reactFundoo/src/Controller/Usercontroller.jsx"],"names":["axios","headers","token","localStorage","getItem","Usercontroller","userRegister","baseUrl","process","env","REACT_APP_BASE_URL","header","post","userLogin","BASE_URL","emailVerify","userEmailVerify","userPasswordReset","userPassword","userToken","console","log","put","userVerify","get","getLoggedUser","uploadPic","formdata"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG;AACd,kBAAgB,kBADF;AAEdC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFO,CAAhB;AAKA,OAAO,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AAC3C,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B;AACA,MAAIC,MAAM,GAAG;AACX,oBAAgB;AADL,GAAb;AAGA,SAAOX,KAAK,CAACY,IAAN,CACL,2BAA2B,mBADtB,EAELN,YAFK,EAGL;AAAEK,IAAAA,MAAM,EAAEA;AAAV,GAHK,CAAP;AAKD;AAED,OAAO,SAASE,SAAT,CAAmBA,SAAnB,EAA8B;AACnC,MAAMN,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYK,QAA5B;AAEA,MAAIH,MAAM,GAAG;AACX,oBAAgB;AADL,GAAb;AAGA,SAAOX,KAAK,CAACY,IAAN,CAAW,2BAA2B,YAAtC,EAAoDC,SAApD,EAA+D;AACpEF,IAAAA,MAAM,EAAEA;AAD4D,GAA/D,CAAP;AAGD;AACD,OAAO,SAASI,WAAT,CAAqBC,eAArB,EAAsC;AAC3C,MAAMT,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYK,QAA5B;AAEA,MAAIH,MAAM,GAAG;AACX,oBAAgB;AADL,GAAb;AAGA,SAAOX,KAAK,CAACY,IAAN,CACL,2BAA2B,qBADtB,EAELI,eAFK,EAGL;AAAEL,IAAAA,MAAM,EAAEA;AAAV,GAHK,CAAP;AAKD;AAED,OAAO,SAASM,iBAAT,CAA2BC,YAA3B,EAAyCC,SAAzC,EAAoD;AACzD,MAAMZ,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYK,QAA5B;AACA,MAAIZ,KAAK,GAAGiB,SAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AAEA,MAAIS,MAAM,GAAG;AACX,oBAAgB;AADL,GAAb;AAGA,SAAOX,KAAK,CAACsB,GAAN,CACL,8CAA8CpB,KADzC,EAELgB,YAFK,EAGL;AAAEP,IAAAA,MAAM,EAAEA;AAAV,GAHK,CAAP;AAKD;AAED,OAAO,SAASY,UAAT,CAAoBJ,SAApB,EAA+B;AACpC,MAAMZ,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYK,QAA5B;AACA,MAAIZ,KAAK,GAAGiB,SAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AAEA,MAAIS,MAAM,GAAG;AACX,oBAAgB;AADL,GAAb;AAIA,SAAOX,KAAK,CAACwB,GAAN,CAAU,uCAAuCtB,KAAjD,EAAwD,IAAxD,EAA8D;AACnES,IAAAA,MAAM,EAAEA;AAD2D,GAA9D,CAAP;AAGD;AAED,OAAO,SAASc,aAAT,GAAyB;AAC9B,SAAOzB,KAAK,CAACwB,GAAN,CAAU,yCAAV,EAAqD;AAC1DvB,IAAAA,OAAO,EAAEA;AADiD,GAArD,CAAP;AAGD;AAED,OAAO,SAASyB,SAAT,CAAmBC,QAAnB,EAA6B;AAClCP,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCM,QAAQ,CAACH,GAAT,CAAa,KAAb,CAAjC;AACA,SAAOxB,KAAK,CAACY,IAAN,CAAW,wBAAX,EAAqCe,QAArC,CAAP;AACD","sourcesContent":["import axios from \"axios\";\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  token: localStorage.getItem(\"token\")\n};\n\nexport function Usercontroller(userRegister) {\n  const baseUrl = process.env.REACT_APP_BASE_URL;\n  let header = {\n    \"Content-Type\": \"application/json\"\n  };\n  return axios.post(\n    \"http://localhost:9020/\" + \"user/registration\",\n    userRegister,\n    { header: header }\n  );\n}\n\nexport function userLogin(userLogin) {\n  const baseUrl = process.env.BASE_URL;\n\n  let header = {\n    \"Content-Type\": \"application/json\"\n  };\n  return axios.post(\"http://localhost:9020/\" + \"user/login\", userLogin, {\n    header: header\n  });\n}\nexport function emailVerify(userEmailVerify) {\n  const baseUrl = process.env.BASE_URL;\n\n  let header = {\n    \"Content-Type\": \"application/json\"\n  };\n  return axios.post(\n    \"http://localhost:9020/\" + \"user/forgotpassword\",\n    userEmailVerify,\n    { header: header }\n  );\n}\n\nexport function userPasswordReset(userPassword, userToken) {\n  const baseUrl = process.env.BASE_URL;\n  let token = userToken;\n  console.log(token);\n\n  let header = {\n    \"Content-Type\": \"application/json\"\n  };\n  return axios.put(\n    \"http://localhost:9020/user/resetpassword/\" + token,\n    userPassword,\n    { header: header }\n  );\n}\n\nexport function userVerify(userToken) {\n  const baseUrl = process.env.BASE_URL;\n  let token = userToken;\n  console.log(token);\n\n  let header = {\n    \"Content-Type\": \"application/json\"\n  };\n\n  return axios.get(\"http://localhost:9020/user/verify/\" + token, null, {\n    header: header\n  });\n}\n\nexport function getLoggedUser() {\n  return axios.get(\"http://localhost:9020/user/loggedinuser\", {\n    headers: headers\n  });\n}\n\nexport function uploadPic(formdata) {\n  console.log(\"in userController\", formdata.get(\"pic\"));\n  return axios.post(\"http://localhost:9020/\", formdata);\n}\n"]},"metadata":{},"sourceType":"module"}